// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("corretor")
  active    Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relacionamentos
  properties Property[] @relation("PropertyAuthor")
  leads      Lead[]     @relation("LeadOwner")
  
  @@map("User")
}

model Property {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  price         Decimal? @db.Decimal(12, 2)
  status        String   @default("draft")
  featured      Boolean  @default(false)
  authorId      Int      @map("author_id")
  bannerImage   String?  @map("banner_image")
  galleryImages String[] @map("gallery_images")
  floorPlans    String[] @map("floor_plans")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")
  
  // Relacionamentos
  author User   @relation("PropertyAuthor", fields: [authorId], references: [id])
  leads  Lead[]
  
  @@map("Property")
}

model Lead {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String
  email      String?
  propertyId Int?     @map("property_id")
  ownerId    Int?     @map("owner_id")
  status     String   @default("new")
  createdAt  DateTime @default(now()) @map("created_at")
  
  // Relacionamentos
  property Property? @relation(fields: [propertyId], references: [id])
  owner    User?     @relation("LeadOwner", fields: [ownerId], references: [id])
  
  @@map("Lead")
}