/**
 * Utilit√°rios para processamento de imagens
 */

// Fun√ß√£o para processar imagem sem redimensionamento - mant√©m qualidade original
export const processImage = (file: File): Promise<string> => {
  return new Promise((resolve, reject) => {
    console.log("üîß processImage - Processando imagem:", file.name, file.size, "bytes");
    
    const reader = new FileReader();
    
    reader.onload = (e) => {
      const imageUrl = e.target?.result as string;
      console.log("üîß processImage - Imagem processada:", imageUrl.length, "caracteres");
      resolve(imageUrl);
    };

    reader.onerror = (error) => {
      console.error("‚ùå processImage - Erro ao processar imagem:", error);
      reject(new Error('Erro ao processar imagem'));
    };
    
    reader.readAsDataURL(file);
  });
};

// Fun√ß√£o para processar banner (mant√©m qualidade original)
export const processBanner = (file: File): Promise<string> => {
  return processImage(file); // Banner: mant√©m resolu√ß√£o original
};

// Fun√ß√£o para processar galeria (mant√©m qualidade original)
export const processGallery = (file: File): Promise<string> => {
  console.log("üîß processGallery - Processando galeria:", file.name);
  return processImage(file); // Galeria: mant√©m resolu√ß√£o original
};

// Fun√ß√£o para processar planta baixa (mant√©m qualidade original)
export const processFloorPlan = (file: File): Promise<string> => {
  return processImage(file); // Planta: mant√©m resolu√ß√£o original
};

// Fun√ß√µes de recorte removidas - imagens j√° v√™m prontas e padronizadas
